version: '3.8'

services:
  buddydesk:
    build: .
    container_name: buddydesk-app
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - PORT=3000
    volumes:
      # Persist uploads across container restarts
      - ./uploads:/app/uploads
      # Persist logs
      - ./logs:/app/logs
      # Optional: Mount database config if using external DB
      # - ./config:/app/config:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - buddydesk-network

  # Optional: Add PostgreSQL if you want to run DB in Docker
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: buddydesk-db
  #   environment:
  #     POSTGRES_DB: buddydesk
  #     POSTGRES_USER: buddydesk_user
  #     POSTGRES_PASSWORD: your_secure_password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped
  #   networks:
  #     - buddydesk-network

networks:
  buddydesk-network:
    driver: bridge

# volumes:
#   postgres_data:

